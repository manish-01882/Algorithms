MST_PRIM(G,w,r)
    for each u belongs to G.v
        u.key = INFINITY
        u.parent = NILL
    r,key = 0
    Q = G.v

    while Q != 0
        u = EXTRACT_MIN(Q)
        for each v belongs to G.adj[u]
    if v belongs to Q and w(u,v) < v.key
        v.parent = u
        v.key = w(u,v)





      // {{INF, 9, 7, 3, 2, INF, INF, INF, INF, INF, INF, INF},
      //  {INF, INF, INF, INF, INF, 4, 2, 1, INF, INF, INF, INF},
      //  {INF, INF, INF, INF, INF, 2, 7, INF, INF, INF, INF, INF},
      //  {INF, INF, INF, INF, INF, INF, INF, 11, INF, INF, INF, INF},
      //  {INF, INF, INF, INF, INF, INF, 11, 8, INF, INF, INF, INF},
      //  {INF, INF, INF, INF, INF, INF, INF, INF, 6, 5, INF, INF},
      //  {INF, INF, INF, INF, INF, INF, INF, INF, 4, 3, INF, INF},
      //  {INF, INF, INF, INF, INF, INF, INF, INF, INF, 5, 6, INF},
      //  {INF, INF, INF, INF, INF, INF, INF, INF, INF, INF, INF, 4},
      //  {INF, INF, INF, INF, INF, INF, INF, INF, INF, INF, INF, 2},
      //  {INF, INF, INF, INF, INF, INF, INF, INF, INF, INF, INF, 5},
      //  {INF, INF, INF, INF, INF, INF, INF, INF, INF, INF, INF, 0}};

